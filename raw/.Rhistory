install.packages("car")
# Regresión lineal múltiple ----
library(car)
# One-way MANOVA ----
# Assumption: Covariance matrix are equal between populations
library(car)
X <- as.matrix(mtcars[,c("mpg","disp","hp","wt")])
cylinder <- factor(mtcars$cyl)
mod <- lm(X ~ cylinder)
res <- manova(mod)
res2<- Manova(mod)
summary(res, test = "Wilks")
res2
res2<- Manova(mod, test.statistic="Wilk")
res2
cylinder <- factor(mtcars$cyl)
transmission <- factor(mtcars$am)
mod <- lm(X ~ cylinder * transmission)
# https://stats.stackexchange.com/questions/11127/multivariate-multiple-regression-in-r
res <- manova(mod) # Type I error
res2<- Manova(mod, test.statistic="Wilk") # Type II error
summary(res, test = "Wilks")
res2
knitr::opts_chunk$set(echo = TRUE)
Year <- c(2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016)
Month <- c(12, 11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1)
Interest_Rate <- c(2.75,2.5,2.5,2.5,2.5,2.5,2.5,2.25,2.25,2.25,2,2,2,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75)
Unemployment_Rate <- c(5.3,5.3,5.3,5.3,5.4,5.6,5.5,5.5,5.5,5.6,5.7,5.9,6,5.9,5.8,6.1,6.2,6.1,6.1,6.1,5.9,6.2,6.2,6.1)
Stock_Index_Price <- c(1464,1394,1357,1293,1256,1254,1234,1195,1159,1167,1130,1075,1047,965,943,958,971,949,884,866,876,822,704,719)
x = cbind(Year,Month,Interest_Rate,Unemployment_Rate,Stock_Index_Price)
x = as.data.frame(x)
View(x)
knitr::opts_chunk$set(echo = TRUE)
Year <- c(2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016)
Month <- c(12, 11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1)
Interest_Rate <- c(2.75,2.5,2.5,2.5,2.5,2.5,2.5,2.25,2.25,2.25,2,2,2,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75)
Unemployment_Rate <- c(5.3,5.3,5.3,5.3,5.4,5.6,5.5,5.5,5.5,5.6,5.7,5.9,6,5.9,5.8,6.1,6.2,6.1,6.1,6.1,5.9,6.2,6.2,6.1)
Stock_Index_Price <- c(1464,1394,1357,1293,1256,1254,1234,1195,1159,1167,1130,1075,1047,965,943,958,971,949,884,866,876,822,704,719)
datos = cbind(Year,Month,Interest_Rate,Unemployment_Rate,Stock_Index_Price)
datos = as.data.frame(datos)
library(stargazer)
mod = lm(Stock_Index_Price~Interest_Rate+Unemployment_Rate, data = datos)
stargazer(mod,type = "text")
caso = c(1.5,6.3)
predict(mod, newdata = caso, interval = 'prediction')
library(stargazer)
mod = lm(Stock_Index_Price~Interest_Rate+Unemployment_Rate, data = datos)
stargazer(mod,type = "text")
caso = c(1.5,6.3)
predict(mod, newdata = caso, interval = 'prediction')
caso = data.frame(Interest_rate = 1.5, Unemployment_Rate = 6.3)
View(caso)
predict(mod, newdata = caso, interval = 'prediction')
library(stargazer)
mod = lm(Stock_Index_Price~Interest_Rate+Unemployment_Rate, data = datos)
caso = data.frame(Interest_rate = 1.5, Unemployment_Rate = 6.3)
predict(mod, newdata = caso, interval = 'prediction')
caso = data.frame(Interest_Rate = 1.5, Unemployment_Rate = 6.3)
predict(mod, newdata = caso, interval = 'prediction')
predict(mod, newdata = caso, interval = 'confidence')
View(mod)
View(mod)
Y = as.matrix(datos$Stock_Index_Price)
Y_hat = as.matrix(mod$fitted.values)
e_hat = as.matrix(mod$residuals)
Y = as.matrix(datos$Stock_Index_Price)
Y_hat = as.matrix(mod$fitted.values)
e_hat = as.matrix(mod$residuals)
izquierdo = t(Y) %*% Y; izquierdo
derecho = t(Y_bar) %*% Y_bar + t(e_hat) %*% e_hat; derecho
Y_hat = as.matrix(mod$fitted.values)
e_hat = as.matrix(mod$residuals)
izquierdo = t(Y) %*% Y; izquierdo
derecho = t(Y_hat) %*% Y_hat + t(e_hat) %*% e_hat; derecho
izquierdo == derecho
# Punto 2
iris
# Punto 2
setosa = iris[,Species=="setosa"]
# Punto 2
setosa = iris[,"Species"=="setosa"]
# Punto 2
setosa = iris["Species"=="setosa",]
# Punto 2
setosa = iris["Species"=="setosa",]
iris
setosa = iris %>% filter(Species=="setosa")
library(dplyr)
setosa = iris %>% filter(Species=="setosa")
head(iris)
View(setosa)
setosa = setosa[,1:4]
View(setosa)
comp_IC <- function(xbar, S, n, level=0.95){
alpha = 1 - (1 - level)/ (2 * length(xbar))
bon <- NULL
for(k in 1:length(xbar)){
bon <- c(bon,
xbar[k] - sqrt(S[k,k]/n) * qt(alpha, df=n-1),
xbar[k] + sqrt(S[k,k]/n) * qt(alpha, df=n-1))
}
round(bon,2)
}
xbar_set = colMeans(setosa)
S_set = cov(setosa)
n_set = nrow(setosa)
comp_IC(xbar_set,S_set,n_set)
comp_IC <- function(xbar, S, n, level=0.95){
alpha = 1 - (1 - level)/ (2 * length(xbar))
bon <- NULL
for(k in 1:length(xbar)){
bon <- c(bon,
xbar[k] - sqrt(S[k,k]/n) * qt(alpha, df=n-1),
xbar[k] + sqrt(S[k,k]/n) * qt(alpha, df=n-1))
}
rtab = rbind(bon)
round(rtab,4)
}
xbar_set = colMeans(setosa)
S_set = cov(setosa)
n_set = nrow(setosa)
comp_IC(xbar_set,S_set,n_set)
# one-sample T^2 test:
T.test <- function(X, mu=0){
X <- as.matrix(X)
n <- nrow(X)
p <- ncol(X)
df2 <- n - p
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
if(length(mu) != p) mu <- rep(mu[1], p)
xbar <- colMeans(X)
S <- cov(X)
T2 <- n * t(xbar - mu) %*% solve(S) %*% (xbar - mu)
Fstat <- T2 / (p * (n-1) / df2)
return(data.frame(T2=as.numeric(T2), Fstat=as.numeric(Fstat),
df1=p, df2=df2, p.value=as.numeric(pval),
type="ind-sample", asymp=asymp, row.names=""))
}
res = T.test(setosa,mu = c(4.9,3.4,1.5,0.23));res
# one-sample T^2 test:
T.test <- function(X, mu=0){
X <- as.matrix(X)
n <- nrow(X)
p <- ncol(X)
df2 <- n - p
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
if(length(mu) != p) mu <- rep(mu[1], p)
xbar <- colMeans(X)
S <- cov(X)
T2 <- n * t(xbar - mu) %*% solve(S) %*% (xbar - mu)
Fstat <- T2 / (p * (n-1) / df2)
pval <- 1 - pf(Fstat, df1=p, df2=df2)
return(data.frame(T2=as.numeric(T2), Fstat=as.numeric(Fstat),
df1=p, df2=df2, p.value=as.numeric(pval),
type="ind-sample", asymp=asymp, row.names=""))
}
res = T.test(setosa,mu = c(4.9,3.4,1.5,0.23));res
# one-sample T^2 test:
T.test <- function(X, mu=0){
X <- as.matrix(X)
n <- nrow(X)
p <- ncol(X)
df2 <- n - p
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
if(length(mu) != p) mu <- rep(mu[1], p)
xbar <- colMeans(X)
S <- cov(X)
T2 <- n * t(xbar - mu) %*% solve(S) %*% (xbar - mu)
Fstat <- T2 / (p * (n-1) / df2)
pval <- 1 - pf(Fstat, df1=p, df2=df2)
return(data.frame(T2=as.numeric(T2), Fstat=as.numeric(Fstat),
df1=p, df2=df2, p.value=as.numeric(pval),
type="ind-sample", row.names=""))
}
res = T.test(setosa,mu = c(4.9,3.4,1.5,0.23));res
# one-sample T^2 test:
x_intento = c(4.9,3.4,1.5,0.23)
X = setosa
X <- as.matrix(X)
n <- nrow(X)
p <- ncol(X)
df2 <- n - p
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
if(length(mu) != p) mu <- rep(mu[1], p)
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
xbar <- colMeans(X)
S <- cov(X)
T2 <- n * t(x_intento - xbar_set) %*% solve(S_set) %*% (x_intento - xbar_set)
Fstat <- T2 / (p * (n-1) / df2)
pval <- 1 - pf(Fstat, df1=p, df2=df2)
data.frame(T2=as.numeric(T2), Fstat=as.numeric(Fstat),
df1=p, df2=df2, p.value=as.numeric(pval),
type="ind-sample", row.names="")
X <- as.matrix(iris[,"Sepal.Length"])
head(iris)
mod <- lm(Length_Sep ~ species)
Length_Sep <- as.matrix(iris[,"Sepal.Length"])
species <- factor(iris$Species)
mod <- lm(Length_Sep ~ species)
res2<- Manova(mod, test.statistic="Wilk") # Type II error
# The following link explains difference between manova and Manova(car package)
# https://stats.stackexchange.com/questions/11127/multivariate-multiple-regression-in-r
res <- manova(mod) # Type I error
# The following link explains difference between manova and Manova(car package)
# https://stats.stackexchange.com/questions/11127/multivariate-multiple-regression-in-r
one.way = aov(Length_Sep ~ species)
summary(one.way)
summary.aov(one.way)
knitr::opts_chunk$set(echo = TRUE)
Year <- c(2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2017,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016,2016)
Month <- c(12, 11,10,9,8,7,6,5,4,3,2,1,12,11,10,9,8,7,6,5,4,3,2,1)
Interest_Rate <- c(2.75,2.5,2.5,2.5,2.5,2.5,2.5,2.25,2.25,2.25,2,2,2,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75,1.75)
Unemployment_Rate <- c(5.3,5.3,5.3,5.3,5.4,5.6,5.5,5.5,5.5,5.6,5.7,5.9,6,5.9,5.8,6.1,6.2,6.1,6.1,6.1,5.9,6.2,6.2,6.1)
Stock_Index_Price <- c(1464,1394,1357,1293,1256,1254,1234,1195,1159,1167,1130,1075,1047,965,943,958,971,949,884,866,876,822,704,719)
datos = cbind(Year,Month,Interest_Rate,Unemployment_Rate,Stock_Index_Price)
datos = as.data.frame(datos)
library(stargazer)
mod = lm(Stock_Index_Price~Interest_Rate+Unemployment_Rate, data = datos)
stargazer(mod,type = "text")
caso = data.frame(Interest_Rate = 1.5, Unemployment_Rate = 6.3)
predict(mod, newdata = caso, interval = 'confidence')
Y = as.matrix(datos$Stock_Index_Price)
Y_hat = as.matrix(mod$fitted.values)
e_hat = as.matrix(mod$residuals)
izquierdo = t(Y) %*% Y; izquierdo
derecho = t(Y_hat) %*% Y_hat + t(e_hat) %*% e_hat; derecho
izquierdo == derecho
library(dplyr)
setosa = iris %>% filter(Species=="setosa")
setosa = setosa[,1:4]
head(iris)
comp_IC <- function(xbar, S, n, level=0.95){
alpha = 1 - (1 - level)/ (2 * length(xbar))
bon <- NULL
for(k in 1:length(xbar)){
bon <- c(bon,
xbar[k] - sqrt(S[k,k]/n) * qt(alpha, df=n-1),
xbar[k] + sqrt(S[k,k]/n) * qt(alpha, df=n-1))
}
rtab = rbind(bon)
round(rtab,4)
}
xbar_set = colMeans(setosa)
S_set = cov(setosa)
n_set = nrow(setosa)
comp_IC(xbar_set,S_set,n_set)
# one-sample T^2 test:
x_intento = c(4.9,3.4,1.5,0.23)
X = setosa
X <- as.matrix(X)
n <- nrow(X)
p <- ncol(X)
df2 <- n - p
if(df2 < 1L) stop("Need nrow(X) > ncol(X).")
xbar <- colMeans(X)
S <- cov(X)
T2 <- n * t(x_intento - xbar_set) %*% solve(S_set) %*% (x_intento - xbar_set)
Fstat <- T2 / (p * (n-1) / df2)
pval <- 1 - pf(Fstat, df1=p, df2=df2)
data.frame(T2=as.numeric(T2), Fstat=as.numeric(Fstat),
df1=p, df2=df2, p.value=as.numeric(pval),
type="ind-sample", row.names="")
Length_Sep <- as.matrix(iris[,-c("Species")])
Length_Sep <- as.matrix(iris[,c("Species"),drop = F])
Length_Sep <- iris[,c("Species"),drop = F]
View(Length_Sep)
Length_Sep <- iris[, !names(iris) %in% dont.want,drop = F]
dont.want = "Species"
Length_Sep <- iris[, !names(iris) %in% dont.want,drop = F]
View(Length_Sep)
species <- factor(iris$Species)
Length_Sep <- as.matrix(iris[, !names(iris) %in% dont.want,drop = F])
species <- factor(iris$Species)
Var_Sep <- as.matrix(iris[, !names(iris) %in% dont.want,drop = F])
species <- factor(iris$Species)
mod <- lm(Var_Sep ~ species)
# The following link explains difference between manova and Manova(car package)
# https://stats.stackexchange.com/questions/11127/multivariate-multiple-regression-in-r
res <- manova(mod) # Type I error
res2<- Manova(mod, test.statistic="Wilk") # Type II error
summary(res, test = "Wilks")
summary.aov(res, test = "Wilks")
res2
summary(res, test = "Wilks")
summary.aov(res, test = "Wilks")
# One-way MANOVA ----
# Assumption: Covariance matrix are equal between populations
library(car)
X <- as.matrix(mtcars[,c("mpg","disp","hp","wt")])
cylinder <- factor(mtcars$cyl)
mod <- lm(X ~ cylinder)
# The following link explains difference between manova and Manova(car package)
# https://stats.stackexchange.com/questions/11127/multivariate-multiple-regression-in-r
res <- manova(mod) # Type I error
res2<- Manova(mod, test.statistic="Wilk") # Type II error
summary(res, test = "Wilks")
summary.aov(res, test = "Wilks")
head(car)
car
mtcars
library(readr)
EAS_2019 <- read_delim("D:/Windows/Desktop/Sexto semestre/Analisis estadistico de datos/proyecto/raw/EAS_2019.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(EAS_2019)
setwd("D:/Windows/Desktop/Sexto semestre/Analisis estadistico de datos/proyecto/raw/")
EAS_2019 <- read_delim("EAS_2019.csv",
delim = ";", escape_double = FALSE, trim_ws = TRUE)
View(EAS_2019)
